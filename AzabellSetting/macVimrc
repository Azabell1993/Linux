" 기본 VIM 설정
set nocompatible              " Vim의 개선된 기능 사용
set relativenumber
filetype off                  " 플러그인을 설정하기 전에 파일 형식을 비활성화
set rtp+=~/.vim/bundle/Vundle.vim  " Vundle 경로 설정

" Vundle 초기화
call vundle#begin()

" Vundle 플러그인 관리
Plugin 'VundleVim/Vundle.vim'        " Vundle 자체 관리 플러그인
Plugin 'tpope/vim-fugitive'          " Git 통합 플러그인 (vim-fugitive 사용)
Plugin 'scrooloose/nerdtree'         " 파일 탐색기 플러그인 (VSCode의 파일 트리 기능)
Plugin 'Valloric/YouCompleteMe'      " 코드 자동 완성 플러그인
Plugin 'vim-airline/vim-airline'     " 상태바 강화 플러그인
Plugin 'ctrlpvim/ctrlp.vim'          " 빠른 파일 찾기 플러그인
Plugin 'airblade/vim-gitgutter'      " Git 변경 사항 표시 플러그인
Plugin 'dense-analysis/ale'          " 실시간 문법 검사 플러그인
Plugin 'voldikss/vim-floaterm'       " 터미널 통합 플러그인
Plugin 'Xuyuanp/nerdtree-git-plugin' " NERDTree와 Git 상태 통합 플러그인

" Vundle 플러그인 목록에 추가
call vundle#end()                    " Vundle 종료
filetype plugin indent on            " 플러그인 및 자동 들여쓰기 활성화

" NERDTree를 열 때 Git 상태를 표시하도록 설정
let g:NERDTreeGitStatusEnable = 1

" 특정 파일 형식 무시 (예: .git, .pyc, .swp)
let g:NERDTreeIgnore = ['\.git$', '\.pyc$', '\.swp$']

" NERDTree 기본 설정
let NERDTreeShowHidden=1  " 숨김 파일 표시
let NERDTreeMinimalUI=1   " 최소 UI
let NERDTreeDirArrows=1   " 디렉토리 화살표 표시

" NERDTree 새로 고침 매핑 (R 키)
autocmd FileType nerdtree map <silent> R :NERDTreeRefreshRoot<CR>

" Vim 시작 시 NERDTree 자동 실행
autocmd VimEnter * NERDTree

" 특정 파일 형식 무시 (예: .git, .pyc, .swp)
let g:NERDTreeIgnore = ['\.git$', '\.pyc$', '\.swp$']

" NERDTree 설정
let NERDTreeShowHidden=1             " 숨김 파일 표시
map <Leader>nt <ESC>:NERDTree<CR>
map <Leader>tm <ESC>:FloatermNew<CR>
map <Leader>tt <ESC>:below terminal<CR>

" let NERDTreeQuitOnOpen=1
let g:ctrlp_custom_ignore = {
  \ 'dir':  '\.git$\|vendor$',
    \ 'file': '\v\.(exe|so|dll)$'
\ }

"Source Explorer 환경설정
nmap <F8> :SrcExplToggle<CR>                "F8 Key = SrcExpl Toggling
nmap <C-H> <C-W>h                           "왼쪽 창으로 이동
nmap <C-J> <C-W>j                           "아래 창으로 이동
nmap <C-K> <C-W>k                           "윗 창으로 이동
nmap <C-L> <C-W>l                           "오른쪽 창으로 이동

" YouCompleteMe 설정
let g:ycm_global_ycm_extra_conf = '~/.vim/.ycm_extra_conf.py'
let g:ycm_confirm_extra_conf = 0
let g:ycm_key_invoke_completion = '<C-Space>'
let g:ycm_min_num_of_chars_for_completion = 2
let g:ycm_show_diagnostics_ui = 1

" Vim Airline 설정
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#formatter = 'unique_tail'

" ALE 설정 (실시간 문법 검사)
let g:ale_linters = {
  \ 'python': ['flake8'],
  \ 'javascript': ['eslint'],
  \ }
let g:ale_fixers = {
  \ '*': ['remove_trailing_lines', 'trim_whitespace'],
  \ 'javascript': ['prettier'],
  \ }
let g:ale_fix_on_save = 1

" 기본 Vim 설정
syntax on                          " 구문 강조 사용
set encoding=utf-8                 " 인코딩 설정
set nu                             " 행 번호 표시
set tabstop=4                      " 탭을 4칸으로 설정
set shiftwidth=4                   " 자동 들여쓰기 4칸
set expandtab                      " 탭을 공백으로 변환
set autoindent                     " 자동 들여쓰기
set smartindent                    " 스마트한 들여쓰기
set cursorline                     " 현재 줄 강조 표시
set laststatus=2                   " 상태바 항상 표시
set incsearch                      " 점진적 검색 활성화
set hlsearch                       " 검색어 강조 표시
set ignorecase                     " 검색 시 대소문자 구분 안 함
set mouse=a                        " 마우스 사용 허용
set clipboard=unnamedplus          " 시스템 클립보드 사용

" 파일 형식별 매핑 설정
au FileType python map <F2> :!python3 %<CR>

" 자동 컴파일 매핑
autocmd FileType c nnoremap <buffer> <F5> :w<CR>:!gcc -o %< % && ./%< <CR>
autocmd FileType cpp nnoremap <buffer> <F5> :w<CR>:!g++ -o %< % && ./%< <CR>
autocmd FileType python nnoremap <buffer> <F5> :w<CR>:!python % <CR>

" 유용한 템플릿 설정
iabbr __email jeewoo19930315@gmail.com
iabbr <expr> __time strftime("%Y-%m-%d %H:%M:%S")
iabbr <expr> __file expand('%:p')
iabbr <expr> __name expand('%')
iabbr <expr> __pwd expand('%:p:h')
iabbr <expr> __branch system("git rev-parse --abbrev-ref HEAD")
